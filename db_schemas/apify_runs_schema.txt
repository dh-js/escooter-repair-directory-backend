APIFY RUNS TABLE SCHEMA
======================

This table stores metadata about Apify crawler runs, allowing us to track and reference historical scraping operations.

Table Name: apify_runs

Column Definitions:
------------------
id                  bigint (Primary Key, Auto-increment)
created_at          timestamp with time zone (Auto-populated)
search_params       jsonb (Search parameters used)
results_count       integer (Number of results found)
status              text (e.g., 'SUCCEEDED', 'FAILED')
status_message      text (Contains completion message and map URL)
usage               jsonb (Contains compute units, reads, writes, and cost)
timing              jsonb (Contains all timing-related information)
data_ids            jsonb (Contains all Apify data storage IDs)
run_id              text (Apify's run identifier)
actor_id            text (Apify's actor identifier)

SQL Creation Command:
-------------------
create table apify_runs (
  id bigint generated by default as identity primary key,
  created_at timestamp with time zone default now() not null,
  search_params jsonb not null,
  results_count integer not null,
  status text not null,
  status_message text,
  usage jsonb not null,
  timing jsonb not null,
  data_ids jsonb not null,
  run_id text not null,
  actor_id text not null
);

Usage Notes:
-----------
1. The table stores metadata only - actual scraped data remains in Apify's storage
2. Use data_ids.defaultDatasetId to retrieve the actual scraping results from Apify
3. usage JSONB field contains:
   {
     "computeUnits": number,
     "datasetReads": number,
     "datasetWrites": number,
     "totalCostUsd": number
   }
4. timing JSONB field contains:
   {
     "startedAt": timestamp with timezone,
     "finishedAt": timestamp with timezone,
     "runTimeSecs": number
   }
5. data_ids JSONB field contains:
   {
     "defaultDatasetId": text,
     "defaultKeyValueStoreId": text,
     "defaultRequestQueueId": text
   }
6. search_params JSONB field contains:
   {
     "query": "search term",
     "state": "state name",
     "city": "city name",
     "maxResults": number
   }
7. All timestamps include timezone information

Implementation:
--------------
1. Execute the SQL creation command in Supabase's SQL editor
2. The table will be automatically available via Supabase's API
3. Use the supabaseService.js file to interact with this table